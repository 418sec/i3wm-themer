#!/usr/bin/env bash

# NOTE TO ALL DEVELOPERS
# If you are interested in helping to improve this script,
# feel free to make any change you think that is necessary
# and submit a Pull Request on the original repository:
# https://github.com/unix121/i3wm-themes
# Every change is welcome, every contributor will be credited (as should)
#
# General goal of this script is to replace the original version listed under
# "scripts" directory of this repository, named "apply_theme.sh". It has to
# replace only the needed lines in each configuration file instead of the
# entire file, to improve functionality, flexibility and help users keep their
# current configuration but changing only what needs to be changed.
#
# Before you start improving it make sure that you have the latest version
# of the script, this script is updated frequently.
#
# Last update: 27 April 2017
#
# Here is a list of the things that
# need addressing :
#
# TODO List:
# 1 - Overwrite only the colors from ~/.extend.Xresources ( or ~/.Xresources)
#     [Almost done] Need to add rofi [DONE] - Nothing new to add (yet).
# 2 - Overwrite only the colors from ~/.i3/config [Almost done] - See [KNOWN
#     ISSUES AT THE MOMENT] section.
# 3 - Overwrite only the shadows and opacity from ~/.config/compton.config [DONE]
# 4 - Overwrite only the needed parts of ~/.config/polybar/config [Almost DONE]
# 5 - Overwrite only the frame/background/foreground of ~/.config/dunst/dunstrc
#
# 6 - Overwrite only the background/foregrounds of ~/.dmenurc [DONE]
# 7 - Overwrite only the colorscheme from ~/.vmric
# 8 - Overwrite only the Icon Pack / GTK Theme from ~/.xsettingsd
# 9 - (Last part after the things above have been addressed) - No more hardcoding
#
# KNOWN ISSUES AT THE MOMENT:
# -> About TODO List Task 2:
#    It replaces all the "client." but not the "client.focused".
#
# The list above will be updated every time something changes or something new
# needs to be added. Feel free to recommend new features.
#
# Lastly,this is the "unstable" version of the script, there is "stable" version
# under "scripts" directory of this repository named "apply_theme.sh".

# If you decide to change this script and use it please make sure you credited
# the author(s) and contributor(s) listed below.

# Written by : Stavros Grigoriou (unix121)
# GitHub : https://github.com/unix121
# E-mail : unix121@protonmail.com
# Simple script to apply a theme from the collection.

# Also contributing: rynnon
# GitHub: https://github.com/rynnon

exec 2> /dev/null

# Printing function
msg(){
  NORMAL="\e[1;0m"
  BOLD="\e[1;1m"
  COLORED="${BOLD}\e[1;32m"
  local option=$1
  local message=$2; shift

  if [ "$option" == "-n" ]
  then
    #Normal information display messages
    printf "\n${COLORED}${BOLD}[*] ${message}${NORMAL}"
  elif [ "$option" ==  "-e" ]
  then
    # Error messages
    printf "\n${COLORED}${BOLD}${message}"
  elif [  "$option" == "-i" ]
  then
    # Subprocess error messages
    printf "\n\t${COLORED}${BOLD}[*] ${message}${NORMAL}"
  elif [ "$option" == "-s" ]
  then
    # Subprocess success messages
    printf "\n\t${COLORED}${BOLD}[+]${NORMAL} ${message}"
  elif [ "$option" == "-f" ]
  then
    # Subprocess failure messages
    printf "\n\t${COLORED}${BOLD}[-]${NORMAL} ${message}"
  elif [ "$option" == "-p" ]
  then
    # Subprocess information message
    printf "\n\t${COLORED}${BOLD}[!] ${message}${NORMAL}"
  elif [ "$option" == "-h" ]
  then
    # Help infomrmation messages
    printf "\n${NORMAL}${message}"
  elif [ "$option" == "-c" ]
  then
    # Caution message
    printf "\n${COLORED}${BOLD}[!]${NORMAL} ${message}"
  else
    # Wrong argument given error
    printf "\n${COLORED}${BOLD}Printing error...!{$NORMAL}"
  fi
}

# Exit function
ext(){
  echo
  msg -n "i3wmthemer finished\n\n"
  exit 0
}

# Sed function
overwrite(){

  local f1=$1
  local f2=$2
  local l=$3

  if local line1=$(cat $f1 | fgrep -w $l)
  then
    if [ ! -z "$line1" ]
    then
      if local line2=$(cat $f2 | fgrep -w $l)
      then
        if [ ! -z "$line2" ]
        then
          #echo
          #echo $line1
          #echo $line2

          line=$( fgrep -n $l $f2 | cut -d':' -f1 )
          #line=$( grep -w $l $f2 | cut -d':' -f1 )
          #line=$(awk "/$l/{print NR}" $f2)
          #echo $line
          replacement=$line1
          #echo $replacement

          #if ! sed -i "s/$line2/$line1/g" $f2
          if ! sed -i "${line}s/.*/$replacement/" $f2
          then
            msg -f "Failed to apply change: Overwrite "$l" ."
          else
            msg -s "Applied change: Overwrite "$l" ."
          fi
        else
          msg -f "Failed to apply change: Overwrite "$l" ."
        fi
      else
      msg -f "Failed to apply change: Overwrite "$l" ."
      fi
    else
      msg -f "Failed to apply change: Overwrite "$l" ."
    fi
  else
    msg -f "Failed to apply change: Overwrite "$l" ."
  fi

}

# Simple initiation message
echo
msg -n "i3wmthemer script started"
echo

# Check if no arguments were given
if [ $# -eq 0 ]
then
  msg -e "Error: No arguments given"
  msg -e "try: ./apply_theme.sh -h for help"
  echo
  ext
fi

OPTION=$1
THEME=$2

if [ "$OPTION" ==  "-t" ]
then
  msg -n "You have entered theming mode."

  if [ -z "$THEME" ]
  then
    msg -e "ERROR: No theme given in arguments"
    ext
  fi

  FLAG=0
  # Locating the theme directory.
  if [ -d "../../themes/$THEME" ]
  then
    msg -i "Located the theme directory."

# -------------------  ~/.Xresources  modification ------------------- #
    # Locating the extend.Xresources files.
    if [ -e "../../themes/$THEME/.resources/.extend.Xresources" ]
    then
      msg -i "Located .extend.Xresources file in theme the directory."
      if [ -e "/$HOME/.extend.Xresources" ]
      then
        msg -i "Located ~/.extend.Xresources file."

        FLAG=1

        f1=../../themes/$THEME/.resources/.extend.Xresources
        f2=/$HOME/.extend.Xresources

        overwrite $f1 $f2 "*.background:"
        overwrite $f1 $f2 "*.foreground:"
        overwrite $f1 $f2 "*.cursorColor:"
        overwrite $f1 $f2 "URxvt.background"
        overwrite $f1 $f2 "URxvt*foreground"
        overwrite $f1 $f2 "URxvt*cursorColor"
        overwrite $f1 $f2 "URxvt.font"

        for i in {0..15}
        do
          # Constructing our strings
          a="*.color"
          b=$a$i
          c=":"
          d=$b$c
          overwrite $f1 $f2 $d
        done

        #<------- Rofi Customization ------>

        overwrite $f1 $f2 "rofi.color-enabled"
        overwrite $f1 $f2 "rofi.color-window"
        overwrite $f1 $f2 "rofi.color-normal"
        overwrite $f1 $f2 "rofi.color-active"
        overwrite $f1 $f2 "rofi.color-urgent"
        overwrite $f1 $f2 "rofi.font"

        #<--- End of Rofi Customization ---->

        msg -i "Finished editing ~/.extend.Xresources file."

      elif [ -e "/$HOME/.Xresources" ]
      then
        msg -i "Located ~/.extend.Xresources file."

        f1=../../themes/$THEME/.resources/.extend.Xresources
        f2=/$HOME/.Xresources

        overwrite $f1 $f2 "*.background:"
        overwrite $f1 $f2 "*.foreground:"
        overwrite $f1 $f2 "*.cursorColor:"
        overwrite $f1 $f2 "URxvt.background"
        overwrite $f1 $f2 "URxvt*foreground"
        overwrite $f1 $f2 "URxvt*cursorColor"
        overwrite $f1 $f2 "URxvt.font"

        for i in {0..15}
        do
          # Constructing our strings
          a="*.color"
          b=$a$i
          c=":"
          d=$b$c
          overwrite $f1 $f2 $d
        done

        #<------- Rofi Customization ------>

        overwrite $f1 $f2 "rofi.color-enabled"
        overwrite $f1 $f2 "rofi.color-window"
        overwrite $f1 $f2 "rofi.color-normal"
        overwrite $f1 $f2 "rofi.color-active"
        overwrite $f1 $f2 "rofi.color-urgent"
        overwrite $f1 $f2 "rofi.font"

        #<--- End of Rofi Customization ---->

        msg -i "Finished editing ~/.Xresources file."

      else
        msg -f "Failed to locate Xresources file."
      fi
    else
      msg -f "Failed to locate .extend.Xresources file in the theme directory."
    fi

    # If the flag is "1" that means that changes have been made and we have
    # to run xrdb.
    if [ $FLAG -eq 1 ]
    then
      msg -i "Executing 'xrdb ~/.Xresources' command."
      if xrdb ~/.Xresources
      then
        msg -i "Success!"
      else
        msg -f "Failed to execute command."
      fi
    fi
# --------------- End of ~/.Xresources  modification --------------- #

# ------------------- ~/.i3/config  modification ------------------- #

    # Locating the ~/.i3/config file in the theme directory
    if [ -e "../../themes/$THEME/.i3/config" ]
    then
      msg -s "Located .i3/config file in the theme directory."

      # Now we locate ~/.i3/config
      if [ -e "/$HOME/.i3/config" ]
      then
        msg -s "Located ~/.i3/config file."

        f1=../../themes/$THEME/.i3/config
        f2=/$HOME/.i3/config

        overwrite $f1 $f2 "new_window"
        overwrite $f1 $f2 "new_float"
        overwrite $f1 $f2 "new_window"
        overwrite $f1 $f2 "client.background"
        overwrite $f1 $f2 "client.focused" # This is still bugged #
        overwrite $f1 $f2 "client.unfocused"
        overwrite $f1 $f2 "client.focused_inactive"
        overwrite $f1 $f2 "client.urgent"
        overwrite $f1 $f2 "client.placeholder"



      elif [ -e "/$HOME/.config/i3/config" ]
      then
        msg -s "Located ~/.config/i3/config file."

        f1=../../themes/$THEME/.i3/config
        f2=/$HOME/.i3/config

        overwrite $f1 $f2 "new_window"
        overwrite $f1 $f2 "new_float"
        overwrite $f1 $f2 "new_window"
        overwrite $f1 $f2 "client.background"
        overwrite $f1 $f2 "client.focused" # This is still bugged #
        overwrite $f1 $f2 "client.unfocused"
        overwrite $f1 $f2 "client.focused_inactive"
        overwrite $f1 $f2 "client.urgent"
        overwrite $f1 $f2 "client.placeholder"
      else
        msg -f "Failed to locate i3 configuration file in your configuration."
      fi

    else

      # If we are here then we failed to locate the ./i3/config file
      # in the theme directory
      msg -f "Failed to locate i3 configuration file in the theme directory."

    fi


# --------------- End of ~/.i3/config  modification ---------------- #

# ------------------ Polybar customization ------------------------- #
    if [ -e "../../themes/$THEME/.config/polybar/config" ]
    then
      # Located the polybar configuration file in the theme directory
      msg -s "Located .config/polybar/config file in the theme directory."

      if [ -e "/$HOME/.config/polybar/config" ]
      then
        # Located the polybar configuration file in the user's directory
        msg -s "Located ~/.config/polybar/config file."

        f1=../../themes/$THEME/.config/polybar/config
        f2=/$HOME/.config/polybar/config

        # Copying the needed parts of the configuration
        #overwrite $f1 $f2 "bottom"
        #overwrite $f1 $f2 "height"
        #overwrite $f1 $f2 "width"
        #overwrite $f1 $f2 "offset-x"
        #overwrite $f1 $f2 "offset-y"
        overwrite $f1 $f2 "fixed-center"
        overwrite $f1 $f2 "font-0"
        overwrite $f1 $f2 "font-1"
        overwrite $f1 $f2 "font-2"
        overwrite $f1 $f2 "font-3"
        overwrite $f1 $f2 "line-size"
        overwrite $f1 $f2 "line-color"
        overwrite $f1 $f2 "border-size"
        overwrite $f1 $f2 "border-color"
        overwrite $f1 $f2 "padding-left"
        overwrite $f1 $f2 "padding-right"
        overwrite $f1 $f2 "module-margin-left"
        overwrite $f1 $f2 "module-margin-right"
        overwrite $f1 $f2 "modules-right"
        overwrite $f1 $f2 "modules-center"
        overwrite $f1 $f2 "modules-left"
        overwrite $f1 $f2 "tray-position"
        overwrite $f1 $f2 "tray-padding"
        overwrite $f1 $f2 "tray-transparent"
        overwrite $f1 $f2 "tray-offset-x"
        overwrite $f1 $f2 "tray-offset-y"
        overwrite $f1 $f2 "tray-maxsize"
        overwrite $f1 $f2 "tray-detached"
        overwrite $f1 $f2 "tray-background"
        overwrite $f1 $f2 "wm-restack"

      else
        # Failed to located user's polybar configuration file.
        msg -f "Failed to locate ~/.config/polybar/config in your configuration"
      fi


    else
      # If we are here that means that we failed to locate /.config/polybar/config
      # in the theme directory. (Possibly bad indexing in the theme directory)
      msg -f "Failed to locate polybar configuration file in the theme directory"
    fi


# --------------- End of Polybar customization --------------------- #

# --------------------- dmenu customization ------------------------ #

  if [ -e "../../themes/$THEME/Other/.dmenurc" ]
  then
    # Located the polybar configuration file in the theme directory
    msg -s "Located .config/polybar/config file in the theme directory."

    if [ -e "/$HOME/.dmenurc" ]
    then
      msg -s "Located ~/.dmenurc file."


      f1=../../themes/$THEME/Other/.dmenurc
      f2=/$HOME/.dmenurc

      overwrite $f1 $f2 "DMENU_NF="
      overwrite $f1 $f2 "DMENU_FN="
      overwrite $f1 $f2 "DMENU_SB="
      overwrite $f1 $f2 "DMENU_NB="
      overwrite $f1 $f2 "DMENU_SF="

    else
      # Failed to locate dmenurc in user's directory
      msg -f "Failed to locate ~/.dmenurc in your configuration"
    fi

  else
    # Failed to locate the dmeny configuration file in theme directory
    msg -f "Failed to locate dmenu configuration file in the theme directory"
  fi

# ---------------- end of dmeny customization ---------------------- #

# ------------------- Compton configuration ------------------------ #

  if [ -e "../../themes/$THEME/.config/compton.conf" ]
  then
    # Located the compton configuration file in the theme directory
    msg -s "Located .config/compton.config file in the theme directory."

    if [ -e "/$HOME/.config/compton.conf" ]
    then
      # Located user's compton configuration file in user's directory
      msg -s "Located ~/.config/compton.conf file."


      f1=../../themes/$THEME/.config/compton.conf
      f2=/$HOME/.config/compton.conf

      overwrite $f1 $f2 "shadow-radius"
      overwrite $f1 $f2 "shadow-offset-x"
      overwrite $f1 $f2 "shadow-offset-y"
      overwrite $f1 $f2 "shadow-opacity"
      overwrite $f1 $f2 "no-dock-shadow"

    else
      # Failed to locate compton configuration file in user's directory
      msg -f "Failed to locate ~/.config/compton.conf in your configuration"
    fi

  else
    # Failed to locate the compton configuration file in theme directory
    msg -f "Failed to locate compton configuration file in the theme directory"
  fi


# --------------- end of compton configuration --------------------- #


# -------- Last part, now we restart i3wm to apply changes---------- #
    msg -i "Restarting i3wm..."
    if ! i3-msg restart
    then
      msg -i "Success!"
    else
      msg -f "Failed to restart i3wm."
    fi

    msg -c "Almost done, please use your appearance manager to set the wallpaper and GTK/Icon themes"

  else

    # In that case we failed to locate the theme directory, that means
    # probably bad pathing in the theme directory.
    msg -f "Failed to locate theme directory."
    ext
  fi

elif [ "$OPTION" == "-b" ]
then
  # Simple backup mode, copy all the files that are changes from the themer
  # in case the user wants to come back to an old configuration.
  msg -n "You have entered backup mode."


elif [ "$OPTION" == "-h" ]
then
  # Simple help prompt.
  # Remember to update this every time something changes in the way
  # That we call the script.
  msg -h "-t {THEME}                   ->  Set a theme."
  msg -h "        Example use: ./apply_theme.sh -t ThemeX"
  msg -h "-b {BACKUP_NAME}             ->  Create a backup of your files under"
  msg -h "                                  ../Backups/ directory."
  msg -h "        Example use: ./apply_theme.sh -b Backup123"
  msg -h "-t Backups/{BACKUP_NAME}    -> Restore a backup."
  msg -h "        Example use: ./apply_theme.sh -t Backups/Backup123"

else
  # No valid option given while starting the themer.
  msg -e "ERROR: No valid arguement given"

fi

# Finished, time to call the exit function to leave the program.
ext
